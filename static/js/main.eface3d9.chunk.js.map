{"version":3,"sources":["components/winner.jsx","components/square.jsx","components/board.jsx","components/jumpto.jsx","components/sorting.jsx","components/handleclick.jsx","components/game.jsx","App.js","reportWebVitals.js","index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","winner","Square","onClick","value","style","className","Board","selected","stySquare","width","height","row","whichRow","rowSquares","key","len","push","background","boardRows","col","rows","jumpTo","step","state","setState","old","obj","stepNumber","xIsNext","sorting","sort","position","handleClick","history","slice","concat","currentSqur","Game","status","useState","Array","fill","linesOfWinner","moves","map","move","desc","pos","vals","searchFilledBoard","type","reverse","App","useEffect","document","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eface3d9.chunk.js","sourcesContent":["function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return {winner: squares[a],lines: [a,b,c]};\n    }\n  }\n  return null;\n}\nexport default calculateWinner\n","const Square= ({onClick,value,style,className}) => {\n    return (\n        <button \n            className={`squares ${className ? className : ''}`} \n            onClick={onClick}\n            style={style}\n        >\n          {value}\n      </button>\n    );\n};\n\nexport default Square\n\n","import Square from './square.jsx'\nconst Board = ({onClick,squares,selected,lines}) => {\n    let stySquare = {\n        width: '100px',\n        height: '100px',\n    };\n    const row = (whichRow) => {\n        const rowSquares = [];\n        const key = (i) => (whichRow*3)+i\n        for (let row = 0, len = 3; row < len; row++) {\n            if (lines) {\n                rowSquares.push(\n                    lines[0] === key(row) || lines[1] === key(row) || lines[2] === key(row) ? \n                    (<span key={key(row)}>\n                    <Square key={key(row)}  \n                        value={squares[key(row)]} \n                        onClick={() => onClick(key(row))} \n                        style={{...stySquare,background: '#000099'}} \n                        />\n                        </span>)\n                    : \n                    (<span key={key(row)}>\n                    <Square \n                        key={key(row)} \n                        value={squares[key(row)]} \n                        onClick={() => onClick(key(row))}\n                        style={{...stySquare}}\n                        />\n                        </span>)\n                ) \n            }\n            else{\n                rowSquares.push(\n                    selected === key(row) ? \n                    (<span key={key(row)}>\n                    <Square key={key(row)}  \n                        value={squares[key(row)]} \n                        onClick={() => onClick(key(row))} \n                        style={ squares[key(row)] ? {...stySquare,background: '#990000'} : {...stySquare}} \n                        className={'selected'}\n                        />\n                        </span>)\n                    : \n                    (<span key={key(row)}>\n                    <Square \n                        key={key(row)} \n                        value={squares[key(row)]} \n                        onClick={() => onClick(key(row))}\n                        style={{...stySquare}}\n                        />\n                        </span>)\n                ) \n            }\n        }\n        return rowSquares  \n    };\n\n    const rows = () => {\n        const boardRows = [];\n        for (let col = 0, len = 3; col < len; col++) {\n            boardRows.push(\n            <div key={col} className=\"board-row\" >\n                {row(col)}\n            </div>\n            )\n        }\n        return boardRows\n    };\n  \n    return (\n        <div className=\"board\">\n            {rows()}\n        </div>\n    );\n};\nexport default Board\n","const jumpTo = (step,state,setState) => {\n        setState( (old) => {\n            const obj = old;\n            return {\n            ...obj,\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n            }\n        })\n};\nexport default jumpTo\n","const sorting = (sort,setState) => {\n    sort ? \n        setState( (old) => {\n            const obj = old;\n            return {\n                ...obj,\n                sort: !obj.sort\n            }\n        }) :\n\n        setState( (old) => {\n            const obj = old;\n            return {\n                ...obj,\n                sort: !obj.sort\n            }\n        })\n};\n\nexport default sorting\n","import calculateWinner from './winner.jsx'\nconst position = (i) =>  {\n     let row,col;\n        if (i <= 2) {\n                row = 1;\n                col = i+1;\n         } \n         else if(i <= 5){\n             row = 2;\n             col = i-2;\n          }\n          else{\n             row = 3;\n             col = i-5;\n          }\n     return [row,col]\n  }\n\nconst handleClick = (i,state,setState) => {\n    const history = state.history.slice(0,state.stepNumber+1);\n    const current = history[history.length-1];\n    const squares = current.squares.slice();\n    const row = state.history.length-1 !== state.stepNumber ? \n        state.row.slice(0,state.stepNumber).concat(position(i)[0])\n        : state.row.concat(position(i)[0]);\n    const col = state.history.length-1 === state.stepNumber ? \n        state.col.slice(0,state.stepNumber).concat(position(i)[1]) \n        : state.col.concat(position(i)[1]);\n    if (calculateWinner(squares) || squares[i]) {\n       return;\n    }\n    squares[i] = state.xIsNext ? 'X' : 'O'\n    setState( (old) => {\n         const obj = old;\n         return {\n             ...obj,\n            history: history.concat([{\n                squares: squares,\n            }]),\n            currentSqur: i,\n            stepNumber: history.length,\n            xIsNext: !state.xIsNext,\n            row: row,\n            col: col,\n         }\n    })\n};\n\nexport default handleClick\n","import {useState} from 'react'\nimport calculateWinner from './winner.jsx'\nimport Board from './board.jsx'\nimport jumpTo from './jumpto.jsx'\nimport sorting from './sorting.jsx'\nimport handleClick from './handleclick.jsx'\n\nconst Game = () => {\n    const [state,setState] = useState({\n        history: [{\n            squares: Array(9).fill(null),\n        }],\n        currentSqur: null,\n        stepNumber: 0,\n        xIsNext: true,\n        sort: false,\n        row: [],\n        col: [],\n        }\n    );\n\n  const history = state.history;\n\n  const {squares} = history[state.stepNumber];\n\n  const winner = calculateWinner(squares)\n  const linesOfWinner = winner ? winner.lines : null;\n\n  const moves = history.map( (step,move) => {\n      const desc = move ? `Go to move #${move}` : `Restart`;\n      const pos = move !== 0 && state.row[move-1] ? `Row ${state.row[move-1]} Col ${state.col[move-1]}` : '';\n      return (\n        <li key={move} className='item'  >\n            <div className='item-content'  >\n                <button onClick={()=> jumpTo(move,state,setState)} >\n                    {desc}\n                </button>\n                <div>\n                  {pos}\n                </div>\n            </div>\n        </li>\n      )\n  });\n\n    let status;\n    const searchFilledBoard = (squares) => {\n        let vals = [];\n        for (let i = 0, len = squares.length; i < len; i++) {\n            if (squares[i]) {\n                vals.push(squares[i])\n            }\n        }\n        return vals.length === 9 ? true : false\n    };\n    if (winner) {\n        status =`Winner: ${winner.winner}` \n    }\n    else if(searchFilledBoard(squares)){\n        status = `No one had wins :( but can go to start!`\n    }\n    else{\n        status = `Next player: ${state.xIsNext ? 'x' : 'O'}`\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <div className='status' >{ status }</div>\n          <Board \n           squares={squares}\n           onClick={(i) => handleClick(i,state,setState)}\n           selected={state.currentSqur}\n           lines={linesOfWinner}\n            />\n            <button onClick={() => sorting(state.sort,setState)} className='sort' >Sort</button>\n        </div>\n        <div className=\"game-info\">\n            <ul className='list' type='none' >{ state.sort ? moves.reverse() :  moves }</ul>\n        </div>\n      </div>\n    );\n};\n\nexport default Game\n","import Game from './components/game.jsx'\nimport {useEffect} from 'react'\nimport './App.css';\n\nfunction App() {\n  useEffect(() => {\n    document.title = \"Tic-tac-toe\"\n      })\n  return (\n    <div className=\"App\">\n     <Game></Game>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}